{"ast":null,"code":"var _jsxFileName = \"/home/aatef/Documents/reacthooks/src/App.js\";\nimport React, { useState, useEffect } from 'react'; // import Header from './Search';\n\nimport axios from 'axios';\nexport default function App(props) {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  useEffect(() => {\n    setInterval(() => axios.get('http://localhost:3000/messages').then(res => {\n      //data is the body of the response \n      setMessages(res.data);\n    }), 60 * 1000);\n  }, []); //only one when the component is opend   //end of effect \n\n  const myChangeHandler = e => {\n    const {\n      target: {\n        value\n      }\n    } = e;\n    setInput(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setInput(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, messages.map(message => /*#__PURE__*/React.createElement(\"h1\", {\n    key: message.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }\n  }, message.content)), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Hello \", this.state.username), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Enter your name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"content\",\n    id: \"content\",\n    onChange: myChangeHandler,\n    value: input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })));\n} // function usesate(initialvalue) {\n//   let item=initialvalue;\n//   let setitem=(val)=>{\n//    item=val; \n//   }\n//   return[item,setitem];\n// }\n//new state the init state is an array \n//use state reurn 2 things :  state and function can editstate;\n// setMessages(oldMessages => oldMessages.concat(newMessages))\n// setMessages(oldMessages => oldMessages.concat(res.data))\n//   function countup()\n//   {\n// setcounter(counter+1)\n//   }","map":{"version":3,"sources":["/home/aatef/Documents/reacthooks/src/App.js"],"names":["React","useState","useEffect","axios","App","props","messages","setMessages","input","setInput","setInterval","get","then","res","data","myChangeHandler","e","target","value","handleSubmit","preventDefault","map","message","content","state","username"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;AACjC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,WAAW,CAET,MAAMP,KAAK,CAACQ,GAAN,CAAU,gCAAV,EAA4CC,IAA5C,CAAiDC,GAAG,IAAI;AAC5D;AACAN,MAAAA,WAAW,CAACM,GAAG,CAACC,IAAL,CAAX;AAED,KAJK,CAFG,EAQP,KAAK,IARE,CAAX;AAWD,GAZQ,EAYN,EAZM,CAAT,CAJiC,CAgB1B;;AAEP,QAAMC,eAAe,GAAIC,CAAD,IAAO;AAC7B,UAAK;AAACC,MAAAA,MAAM,EAAC;AAACC,QAAAA;AAAD;AAAR,QAAiBF,CAAtB;AACJP,IAAAA,QAAQ,CAACS,KAAD,CAAR;AAEO,GAJL;;AAKI,QAAMC,YAAY,GAAIH,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACI,cAAF;AAEAX,IAAAA,QAAQ,CAACS,KAAD,CAAR;AAEG,GALL;;AAQJ,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIZ,QAAQ,CAACe,GAAT,CAAaC,OAAO,iBAAI;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BD,OAAO,CAACC,OAAnC,CAAxB,CAFJ,eAKI;AAAM,IAAA,EAAE,EAAG,MAAX;AAAkB,IAAA,QAAQ,EAAEJ,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAW,KAAKK,KAAL,CAAWC,QAAtB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,EAAE,EAAC,SAHL;AAIE,IAAA,QAAQ,EAAEV,eAJZ;AAKE,IAAA,KAAK,EAAEP,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CALJ,CADF;AAwBD,C,CAED;AAEA;AACA;AACA;AACA;AACA;AACA;AAEC;AACC;AAIF;AAGA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import Header from './Search';\n\nimport axios from 'axios';\nexport default function App(props) {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  useEffect(() => {\n    setInterval(\n\n      () => axios.get('http://localhost:3000/messages').then(res => {\n        //data is the body of the response \n        setMessages(res.data);\n\n      })\n\n      , 60 * 1000)\n\n\n  }, []) //only one when the component is opend   //end of effect \n\n  const myChangeHandler = (e) => {\n    const{target:{value}}=e;\nsetInput(value);\n \n      }\n      const handleSubmit = (e) => {\n        e.preventDefault()\n\n        setInput(value);\n     \n          }\n      \n\n  return (\n    <div>\n      {\n        messages.map(message => <h1 key={message.content}>{message.content}</h1>)\n      }\n      {\n        <form id = \"form\" onSubmit={handleSubmit}>\n          <h1>Hello {this.state.username}</h1>\n          <p>Enter your name:</p>\n          <input\n            type='text'\n            name=\"content\"\n            id=\"content\"\n            onChange={myChangeHandler}\n            value={input}\n          />\n        </form>\n\n      }\n\n    </div>\n\n\n  )\n}\n\n// function usesate(initialvalue) {\n\n//   let item=initialvalue;\n//   let setitem=(val)=>{\n//    item=val; \n//   }\n//   return[item,setitem];\n// }\n\n //new state the init state is an array \n  //use state reurn 2 things :  state and function can editstate;\n\n\n\n// setMessages(oldMessages => oldMessages.concat(newMessages))\n\n\n// setMessages(oldMessages => oldMessages.concat(res.data))\n\n//   function countup()\n//   {\n// setcounter(counter+1)\n//   }"]},"metadata":{},"sourceType":"module"}