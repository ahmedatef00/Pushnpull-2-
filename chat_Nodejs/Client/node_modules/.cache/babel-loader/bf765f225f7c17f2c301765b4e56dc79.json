{"ast":null,"code":"var _jsxFileName = \"/home/aatef/Music/chat_Nodejs/Client/src/compnents/Sse.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Sse() {\n  const [messages, setMessages] = useState([]);\n  const [usernames, setUsername] = useState([]);\n  const [input, setInput] = useState('');\n  const [inputname, setInputname] = useState('');\n  useEffect(() => {\n    const eventSource = new EventSource('http://localhost:5005/subscribe');\n\n    eventSource.onmessage = e => {\n      console.log(e.data);\n      const message = JSON.parse(e.data);\n      setMessages(messages => messages.concat(message));\n      console.log(message);\n    };\n  }, []);\n\n  const myChangeHandler = e => {\n    const {\n      target: {\n        value\n      }\n    } = e;\n    setInput(value);\n  };\n\n  const nameChangeHandler = e => {\n    const {\n      target: {\n        value\n      }\n    } = e;\n    setInputname(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); //prevent refresh\n    // axios.post('http://localhost:5005/messages',{content:input,username:inputname})//in your body post the content from value\n\n    axios.post('http://localhost:5005/messageSubscribers', {\n      content: input,\n      username: inputname\n    }).then(() => {\n      setInput('');\n      setInputname('');\n    }); //in your body post the content from value\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"our chat\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"content\",\n    id: \"content\",\n    placeholder: \"message\",\n    onChange: myChangeHandler,\n    value: input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"contentname\",\n    id: \"content\",\n    placeholder: \"username\",\n    onChange: nameChangeHandler,\n    value: inputname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"send\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, messages.map(m => /*#__PURE__*/React.createElement(\"h1\", {\n    key: m.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 39\n    }\n  }, \" \", m.username, \" : \", m.content))));\n}\n\nexport default Sse;","map":{"version":3,"sources":["/home/aatef/Music/chat_Nodejs/Client/src/compnents/Sse.js"],"names":["React","useState","useEffect","axios","Sse","messages","setMessages","usernames","setUsername","input","setInput","inputname","setInputname","eventSource","EventSource","onmessage","e","console","log","data","message","JSON","parse","concat","myChangeHandler","target","value","nameChangeHandler","handleSubmit","preventDefault","post","content","username","then","map","m"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Sse () {\n    \n    const [messages, setMessages] = useState([]);\n    const [usernames, setUsername] = useState([]);\n  \n    const [input, setInput] = useState('');\n    const [inputname, setInputname] = useState('');\n   \n    useEffect(() => {\n      \n           const eventSource =new EventSource ('http://localhost:5005/subscribe');\n           eventSource.onmessage=\n             (e)=>{\n             console.log(e.data);\n             const message = JSON.parse(e.data);\n            setMessages(messages => messages.concat(message));\n            \n console.log(message);\n \n          };\n           \n           \n            \n            \n    }, []);\n    const myChangeHandler = (e) => {\n        const { target: { value } } = e;\n        setInput(value);\n    \n      }\n      const nameChangeHandler = (e) => {\n        const { target: { value } } = e;\n        setInputname(value);\n    \n      }\n    \n      const handleSubmit = (e) => {\n        e.preventDefault(); //prevent refresh\n    \n        // axios.post('http://localhost:5005/messages',{content:input,username:inputname})//in your body post the content from value\n    \n        axios.post('http://localhost:5005/messageSubscribers', { content: input, username: inputname })\n        .then(()=>{setInput('')\n      setInputname('');\n      })\n        //in your body post the content from value\n    \n      }\n\n\n    return (\n        <div>\n        \n            <form id=\"form\" onSubmit={handleSubmit}>\n              <h1>our chat</h1>\n              <input\n                type='text'\n                name=\"content\"\n                id=\"content\"\n                placeholder=\"message\"\n                onChange={myChangeHandler}\n                value={input}\n              />\n              <input\n                type='text'\n                name=\"contentname\"\n                id=\"content\"\n                placeholder=\"username\"\n                onChange={nameChangeHandler}\n                value={inputname}\n              />\n              <button type=\"submit\" >send</button>\n            </form>\n    \n            <div>\n                {\n                    messages.map(m => <h1 key={m.content} > {m.username} : {m.content}</h1>)\n                }\n            </div>      \n    \n        </div>\n    \n    \n      )\n\n        }\nexport default Sse;"]},"metadata":{},"sourceType":"module"}