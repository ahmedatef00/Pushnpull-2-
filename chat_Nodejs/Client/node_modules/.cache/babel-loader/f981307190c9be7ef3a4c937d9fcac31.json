{"ast":null,"code":"var _jsxFileName = \"/home/aatef/Music/chat_Nodejs/Client/src/compnents/Ws.js\";\nimport React, { useState, useEffect } from 'react';\nimport io from \"socket.io-client\";\nimport axios from 'axios';\nconst id = Math.ceil(Math.random() * 100000);\nvar socket = io.connect('http://localhost:5000');\n\nfunction Ws(props) {\n  const [messages, setMessages] = useState([]);\n  const [usernames, setUsername] = useState([]);\n  const [input, setInput] = useState('');\n  const [inputname, setInputname] = useState(''); // const subscribe = () => axios.post('http://localhost:5005/subscribe',\n  //   { id }).then(res => {\n  //     //subscripe again\n  //     subscribe();\n  //   });\n\n  useEffect(() => {\n    socket.on('sendtoall', (newMsg, newUser) => {\n      setMessages(messages => messages.concat(newMsg));\n      setUsername(usernames => usernames.concat(newUser));\n    }); // subscribe();\n    // })\n    //only one when the component is opend   //end of effect   // , 100 * 1000)\n  }, []); //only one when the component is opend   //end of effect \n\n  const myChangeHandler = e => {\n    const {\n      target: {\n        value\n      }\n    } = e;\n    setInput(value);\n  };\n\n  const nameChangeHandler = e => {\n    const {\n      target: {\n        value\n      }\n    } = e;\n    setInputname(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); //prevent refresh\n\n    socket.emit('message', input, inputname);\n    setInput('');\n    setInputname(''); // axios.post('http://localhost:5005/messages',{content:input,username:inputname})//in your body post the content from value\n    // axios.post('http://localhost:5005/messageSubscribers', { content: input, username: inputname })//in your body post the content from value\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, messages.map(message => /*#__PURE__*/React.createElement(\"h1\", {\n    key: message.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }\n  }, \" msg \", i++, \": \", message)), usernames.map(username => /*#__PURE__*/React.createElement(\"h1\", {\n    key: username.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 36\n    }\n  }, \" user : \", username, \" \")), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"our chat\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"content\",\n    id: \"content\",\n    placeholder: \"message\",\n    onChange: myChangeHandler,\n    value: input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"contentname\",\n    id: \"content\",\n    placeholder: \"username\",\n    onChange: nameChangeHandler,\n    value: inputname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"send\")));\n}\n\nexport default Ws;","map":{"version":3,"sources":["/home/aatef/Music/chat_Nodejs/Client/src/compnents/Ws.js"],"names":["React","useState","useEffect","io","axios","id","Math","ceil","random","socket","connect","Ws","props","messages","setMessages","usernames","setUsername","input","setInput","inputname","setInputname","on","newMsg","newUser","concat","myChangeHandler","e","target","value","nameChangeHandler","handleSubmit","preventDefault","emit","map","message","content","i","username"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from \"socket.io-client\";\nimport axios from 'axios';\nconst id = Math.ceil(Math.random() * 100000);\nvar socket = io.connect('http://localhost:5000');\n\nfunction Ws(props) {\n  const [messages, setMessages] = useState([]);\n  const [usernames, setUsername] = useState([]);\n\n  const [input, setInput] = useState('');\n  const [inputname, setInputname] = useState('');\n\n  // const subscribe = () => axios.post('http://localhost:5005/subscribe',\n  //   { id }).then(res => {\n  //     //subscripe again\n  //     subscribe();\n  //   });\n\n  useEffect(() => {\n    socket.on('sendtoall',\n    (newMsg,newUser)=>{setMessages(messages => messages.concat(newMsg))\n      setUsername(usernames => usernames.concat(newUser));\n  \n  })\n    // subscribe();\n    // })\n    //only one when the component is opend   //end of effect   // , 100 * 1000)\n  }, []) //only one when the component is opend   //end of effect \n\n  const myChangeHandler = (e) => {\n    const { target: { value } } = e;\n    setInput(value);\n\n  }\n  const nameChangeHandler = (e) => {\n    const { target: { value } } = e;\n    setInputname(value);\n\n  }\n\n  const handleSubmit = (e) => {\n    \n    e.preventDefault(); //prevent refresh\n    socket.emit('message',input,inputname);\n    setInput('');\n    setInputname('');\n    // axios.post('http://localhost:5005/messages',{content:input,username:inputname})//in your body post the content from value\n\n    // axios.post('http://localhost:5005/messageSubscribers', { content: input, username: inputname })//in your body post the content from value\n\n  }\n\n\n  return (\n    <div>\n      {\n        messages.map(message => <h1 key={message.content}> msg {i++}: {message}</h1>)\n      }\n      {usernames.map((username) => <h1 key={username.username}> user : {username} </h1>)\n      }\n      {\n        <form id=\"form\" onSubmit={handleSubmit}>\n          <h1>our chat</h1>\n          {/* <p>Enter your name:{usernames.content} </p> */}\n          <input\n            type='text'\n            name=\"content\"\n            id=\"content\"\n            placeholder=\"message\"\n            onChange={myChangeHandler}\n            value={input}\n          />\n          <input\n            type='text'\n            name=\"contentname\"\n            id=\"content\"\n            placeholder=\"username\"\n            onChange={nameChangeHandler}\n            value={inputname}\n          />\n          <button type=\"submit\" >send</button>\n        </form>\n\n      }\n\n    </div>\n\n\n  )\n}\n\nexport default Ws;"]},"metadata":{},"sourceType":"module"}